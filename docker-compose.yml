version: '3.8'

services:
  # Основное приложение Defect Dojo
  defectdojo:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DEBUG=False
      - SECRET_KEY=${SECRET_KEY}
      - DATABASE_URL=postgresql://defectdojo:${DB_PASSWORD}@db:5432/defectdojo
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis
    volumes:
      - ./logs:/app/logs
    networks:
      - defectdojo-network
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
      - /var/tmp

  # База данных PostgreSQL
  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=defectdojo
      - POSTGRES_USER=defectdojo
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./security/db-init:/docker-entrypoint-initdb.d
    networks:
      - defectdojo-network
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true

  # Redis для кеширования
  redis:
    image: redis:7-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - defectdojo-network
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true

  # Nginx как reverse proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - defectdojo
    networks:
      - defectdojo-network
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true

  # SonarQube для анализа кода
  sonarqube:
    image: sonarqube:community
    ports:
      - "9000:9000"
    environment:
      - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    networks:
      - defectdojo-network
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true

  # OWASP ZAP для DAST
  zap:
    image: owasp/zap2docker-stable
    command: zap-baseline.py -t http://defectdojo:8000 -J zap-report.json
    volumes:
      - ./security/zap-results:/zap/wrk
    networks:
      - defectdojo-network
    depends_on:
      - defectdojo
    restart: "no"

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  sonarqube_data:
    driver: local
  sonarqube_extensions:
    driver: local
  sonarqube_logs:
    driver: local

networks:
  defectdojo-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 